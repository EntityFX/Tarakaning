{% extends "views/layouts/content.master.twig" %}

{% block body %}
<ul class="nav nav-tabs" id="item-tab">
    <li class="active"><a href="#edit_info" data-toggle="tab">Редактировать личные данные</a></li>
    <li><a href="#pass_change" data-toggle="tab">Сменить пароль</a></li>
    <li><a href="#settings" data-toggle="tab">Дополнительные настройки</a></li>
</ul>
<div class="tab-content">
    <div class="tab-pane active" id="edit_info">
        {{ C.Html.errorSummary(model['ProfileForm'],
                '<div class="alert alert-error">
                    <a class="close" data-dismiss="alert" href="#">&times;</a>',
                '</div>'
            )
        }} 
        
        
       {% set profileForm = this.beginWidget(
                'CActiveForm',
                {
                    'enableClientValidation' : true,
                    'enableAjaxValidation' : false,
                    'clientOptions' : {
                        'validateOnSubmit' : true
                    },
                    'htmlOptions' : {
                        'class' : 'form-horizontal'
                    },
                    'method' : 'post',
                    'errorMessageCssClass' : 'error'
                }
            )
        %}
            <fieldset>
                <legend>Редактирование профиля</legend>
            </fieldset>
            {% set div = this.beginWidget(
                    'EntityFxDivControlGroup',
                    {
                        'class' : 'control-group',
                        'form' : profileForm,
                        'model' : model['ProfileForm'],
                        'attribute' : 'firstname'
                    }
                )
            %}
                {{ profileForm.label(model['ProfileForm'],'firstname',{'class' : 'control-label'}) }}
                <div class="controls">
                    {{ profileForm.textField(model['ProfileForm'],'firstname',{'class' : 'input-large'}) }}
                    {{ profileForm.error(model['ProfileForm'],'firstname',{'class' : 'help-inline'}) }}
                </div>
            {% do this.endWidget() %}
            
            {% set div = this.beginWidget(
                    'EntityFxDivControlGroup',
                    {
                        'class' : 'control-group',
                        'form' : profileForm,
                        'model' : model['ProfileForm'],
                        'attribute' : 'secondName'
                    }
                )
            %}
                {{ profileForm.label(model['ProfileForm'],'secondName',{'class' : 'control-label'}) }}
                <div class="controls">
                    {{ profileForm.textField(model['ProfileForm'],'secondName',{'class' : 'input-large'}) }}
                    {{ profileForm.error(model['ProfileForm'],'secondName',{'class' : 'help-inline'}) }}
                </div>
            {% do this.endWidget() %}
            
            {% set div = this.beginWidget(
                    'EntityFxDivControlGroup',
                    {
                        'class' : 'control-group',
                        'form' : profileForm,
                        'model' : model['ProfileForm'],
                        'attribute' : 'lastName'
                    }
                )
            %}
                {{ profileForm.label(model['ProfileForm'],'lastName',{'class' : 'control-label'}) }}
                <div class="controls">
                    {{ profileForm.textField(model['ProfileForm'],'lastName',{'class' : 'input-large'}) }}
                    {{ profileForm.error(model['ProfileForm'],'lastName',{'class' : 'help-inline'}) }}
                </div>
            {% do this.endWidget() %}

            {% set div = this.beginWidget(
                    'EntityFxDivControlGroup',
                    {
                        'class' : 'control-group',
                        'form' : profileForm,
                        'model' : model['ProfileForm'],
                        'attribute' : 'email'
                    }
                )
            %}
                {{ profileForm.label(model['ProfileForm'],'email',{'class' : 'control-label'}) }}
                <div class="controls">
                    {{ profileForm.textField(model['ProfileForm'],'email',{'class' : 'input-large'}) }}
                    {{ profileForm.error(model['ProfileForm'],'email',{'class' : 'help-inline'}) }}
                </div>
            {% do this.endWidget() %}
            
            <div class="form-actions">
                <button class="btn btn-primary" type="submit" name="save_profile">
                    <i class="icon-hdd icon-white"></i>
                    Сохранить
                </button>
            </div>
        {% do this.endWidget() %}
    </div>
    <div class="tab-pane" id="pass_change">
        {{ C.Html.errorSummary(model['ChangePasswordForm'],
                '<div class="alert alert-error">
                    <a class="close" data-dismiss="alert" href="#">&times;</a>',
                '</div>'
            )
        }} 
        
       {% set changePasswordForm = this.beginWidget(
                'CActiveForm',
                {
                    'enableClientValidation' : true,
                    'enableAjaxValidation' : false,
                    'clientOptions' : {
                        'validateOnSubmit' : true
                    },
                    'htmlOptions' : {
                        'class' : 'form-horizontal'
                    },
                    'method' : 'post',
                    'errorMessageCssClass' : 'error'
                }
            )
        %}
            <fieldset>
                <legend>Сменить пароль</legend>
            </fieldset>
            {% set div = this.beginWidget(
                    'EntityFxDivControlGroup',
                    {
                        'class' : 'control-group',
                        'form' : changePasswordForm,
                        'model' : model['ChangePasswordForm'],
                        'attribute' : 'oldPassword'
                    }
                )
            %}
                {{ changePasswordForm.label(model['ChangePasswordForm'],'oldPassword',{'class' : 'control-label'}) }}
                <div class="controls">
                    {{ changePasswordForm.passwordField(model['ChangePasswordForm'],'oldPassword',{'class' : 'input-large'}) }}
                    {{ changePasswordForm.error(model['ChangePasswordForm'],'oldPassword',{'class' : 'help-inline'}) }}
                </div>
            {% do this.endWidget() %}
            
            {% set div = this.beginWidget(
                    'EntityFxDivControlGroup',
                    {
                        'class' : 'control-group',
                        'form' : changePasswordForm,
                        'model' : model['ChangePasswordForm'],
                        'attribute' : 'newPassword'
                    }
                )
            %}
                {{ changePasswordForm.label(model['ChangePasswordForm'],'newPassword',{'class' : 'control-label'}) }}
                <div class="controls">
                    {{ changePasswordForm.passwordField(model['ChangePasswordForm'],'newPassword',{'class' : 'input-large'}) }}
                    {{ changePasswordForm.error(model['ChangePasswordForm'],'newPassword',{'class' : 'help-inline'}) }}
                </div>
            {% do this.endWidget() %}

            {% set div = this.beginWidget(
                    'EntityFxDivControlGroup',
                    {
                        'class' : 'control-group',
                        'form' : changePasswordForm,
                        'model' : model['ChangePasswordForm'],
                        'attribute' : 'confirmPassword'
                    }
                )
            %}
                {{ changePasswordForm.label(model['ChangePasswordForm'],'confirmPassword',{'class' : 'control-label'}) }}
                <div class="controls">
                    {{ changePasswordForm.passwordField(model['ChangePasswordForm'],'confirmPassword',{'class' : 'input-large'}) }}
                    {{ changePasswordForm.error(model['ChangePasswordForm'],'confirmPassword',{'class' : 'help-inline'}) }}
                </div>
            {% do this.endWidget() %}
            
            <div class="form-actions">
                <button class="btn btn-primary" type="submit" name="save_btn">
                    <i class="icon-hdd icon-white"></i>
                    Сохранить
                </button>
            </div>
        {% do this.endWidget() %}
    </div>
    <div class="tab-pane" id="settings">
       {% set changePasswordForm = this.beginWidget(
                'CActiveForm',
                {
                    'enableClientValidation' : true,
                    'enableAjaxValidation' : false,
                    'clientOptions' : {
                        'validateOnSubmit' : true
                    },
                    'htmlOptions' : {
                        'class' : 'form-horizontal'
                    },
                    'method' : 'post',
                    'errorMessageCssClass' : 'error'
                }
            )
        %}
            <fieldset>
                <legend>Проект по-умолчанию</legend>
            </fieldset>
            {% set div = this.beginWidget(
                    'EntityFxDivControlGroup',
                    {
                        'class' : 'control-group',
                        'form' : changePasswordForm,
                        'model' : model['ProfileDefaultProjectForm'],
                        'attribute' : 'defaultProjectId'
                    }
                )
            %}
                {{ changePasswordForm.label(model['ProfileDefaultProjectForm'],'defaultProjectId',{'class' : 'control-label'}) }}
                <div class="controls">
                    {{ changePasswordForm.dropDownList(model['ProfileDefaultProjectForm'],'defaultProjectId', this.userProjectsListData, {'class' : 'input-large'}) }}
                </div>
            {% do this.endWidget() %}
            <div class="form-actions">
                {{ C.Html.tag(
                        'button',
                        { 
                            'class' : 'btn btn-primary', 
                            'type' : 'submit', 
                            'disabled' : this.userProjectsListData == none 
                        }, 
                        '<i class="icon-hdd icon-white"></i> Сохранить', 
                        true 
                    )
                }}
            </div>
        {% do this.endWidget() %}
    </div>
</div>
{% endblock %}